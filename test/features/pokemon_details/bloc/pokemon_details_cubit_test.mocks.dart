// Mocks generated by Mockito 5.4.5 from annotations
// in ksquare_challenge/test/features/pokemon_details/bloc/pokemon_details_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:fpdart/fpdart.dart' as _i6;
import 'package:ksquare_challenge/src/core/api_client/api_manager/api_manager.dart'
    as _i11;
import 'package:ksquare_challenge/src/core/api_client/api_manager/pokemon_api_manager.dart'
    as _i2;
import 'package:ksquare_challenge/src/core/api_client/error/api_error.dart'
    as _i7;
import 'package:ksquare_challenge/src/core/api_client/utils/connectivity.dart'
    as _i3;
import 'package:ksquare_challenge/src/features/common/data/models/pokemon_details.dart'
    as _i10;
import 'package:ksquare_challenge/src/features/common/data/models/pokemon_row.dart'
    as _i8;
import 'package:ksquare_challenge/src/features/common/domain/repositories/pokemon_repository.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePokemonApiManager_0 extends _i1.SmartFake
    implements _i2.PokemonApiManager {
  _FakePokemonApiManager_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [Connectivity].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectivity extends _i1.Mock implements _i3.Connectivity {
  MockConnectivity() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> hasInternetAccess() =>
      (super.noSuchMethod(
            Invocation.method(#hasInternetAccess, []),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);
}

/// A class which mocks [PokemonRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPokemonRepository extends _i1.Mock implements _i5.PokemonRepository {
  MockPokemonRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i6.Either<_i7.ApiError, List<_i8.PokemonRowModel>>>
  getAllPokemons({required int? offset}) =>
      (super.noSuchMethod(
            Invocation.method(#getAllPokemons, [], {#offset: offset}),
            returnValue: _i4.Future<
              _i6.Either<_i7.ApiError, List<_i8.PokemonRowModel>>
            >.value(
              _i9.dummyValue<
                _i6.Either<_i7.ApiError, List<_i8.PokemonRowModel>>
              >(
                this,
                Invocation.method(#getAllPokemons, [], {#offset: offset}),
              ),
            ),
          )
          as _i4.Future<_i6.Either<_i7.ApiError, List<_i8.PokemonRowModel>>>);

  @override
  _i4.Future<_i6.Either<_i7.ApiError, _i10.PokemonDetailsModel>>
  getPokemonDetails({required String? id}) =>
      (super.noSuchMethod(
            Invocation.method(#getPokemonDetails, [], {#id: id}),
            returnValue: _i4.Future<
              _i6.Either<_i7.ApiError, _i10.PokemonDetailsModel>
            >.value(
              _i9.dummyValue<
                _i6.Either<_i7.ApiError, _i10.PokemonDetailsModel>
              >(this, Invocation.method(#getPokemonDetails, [], {#id: id})),
            ),
          )
          as _i4.Future<_i6.Either<_i7.ApiError, _i10.PokemonDetailsModel>>);
}

/// A class which mocks [ApiManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiManager extends _i1.Mock implements _i11.ApiManager {
  MockApiManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PokemonApiManager get pokemonApiManager =>
      (super.noSuchMethod(
            Invocation.getter(#pokemonApiManager),
            returnValue: _FakePokemonApiManager_0(
              this,
              Invocation.getter(#pokemonApiManager),
            ),
          )
          as _i2.PokemonApiManager);
}

/// A class which mocks [ApiError].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiError extends _i1.Mock implements _i7.ApiError {
  MockApiError() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set errorCode(String? _errorCode) => super.noSuchMethod(
    Invocation.setter(#errorCode, _errorCode),
    returnValueForMissingStub: null,
  );

  @override
  set errorMessage(String? _errorMessage) => super.noSuchMethod(
    Invocation.setter(#errorMessage, _errorMessage),
    returnValueForMissingStub: null,
  );
}
